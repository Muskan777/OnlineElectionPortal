export = PubSubAPI;
declare class PubSubAPI {
    /**
     * @param {Object} config
     * @param {IPNS} config.ipns
     * @param {Options} [config.options]
     */
    constructor({ ipns, options }: {
        ipns: IPNS;
        options: import("./utils").PubSubRoutingOptions | undefined;
    });
    cancel: (name: string, options?: import("ipfs-core-types").AbortOptions | undefined) => Promise<{
        canceled: boolean;
    }>;
    state: (_options?: import("ipfs-core-types").AbortOptions | undefined) => Promise<{
        enabled: boolean;
    }>;
    subs: (options?: import("ipfs-core-types").AbortOptions | undefined) => Promise<string[]>;
}
declare namespace PubSubAPI {
    export { IPNS, Options, AbortOptions };
}
type IPNS = import("../../ipns");
type Options = {
    /**
     * - Enable pub-sub on IPNS. (Default: `false`)
     */
    ipnsPubsub?: boolean | undefined;
};
type AbortOptions = import("ipfs-core-types").AbortOptions;
//# sourceMappingURL=index.d.ts.map