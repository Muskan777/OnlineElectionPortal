export function resolvePath({ ipns, dagReader }: {
    ipns: IPNS;
    dagReader: DagReader;
}, name: string): Promise<any>;
export type DagReader = {
    get: (ipfsPath: import("ipfs-core-types/src/root").IPFSPath, options?: (import("../dag/get").GetOptions & import("ipfs-core-types").AbortOptions) | undefined) => Promise<import("../dag/get").DagEntry>;
    resolve: (ipfsPath: import("ipfs-core-types/src/root").IPFSPath, options?: (import("../dag/resolve").ResolveOptions & import("ipfs-core-types").AbortOptions) | undefined) => Promise<import("../dag/resolve").ResolveResult>;
    tree: (ipfsPath: import("cids"), options?: (import("../dag/tree").TreeOptions & import("ipfs-core-types").AbortOptions) | undefined) => AsyncIterable<string>;
};
export type IPNS = import("../ipns");
//# sourceMappingURL=utils.d.ts.map