declare function _exports({ pinManager, dagReader }: {
    pinManager: import('.').PinManager;
    dagReader: import('.').DagReader;
}): (options?: LsOptions | undefined) => AsyncIterable<LsEntry>;
export = _exports;
export type LsOptions = LsSettings & import("ipfs-core-types").AbortOptions;
export type LsSettings = {
    /**
     * - CIDs or IPFS paths to search for in the pinset.
     */
    paths?: string[] | import("cids")[] | undefined;
    /**
     * - Filter by this type of pin ("recursive", "direct" or "indirect")
     */
    type?: "direct" | "recursive" | "indirect" | "all" | undefined;
};
export type LsEntry = {
    /**
     * -  CID of the pinned node
     */
    cid: CID;
    /**
     * -  Pin type ("recursive", "direct" or "indirect")
     */
    type: PinType;
};
export type PinType = "direct" | "recursive" | "indirect";
export type PinQueryType = "direct" | "recursive" | "indirect" | "all";
export type AbortOptions = import("ipfs-core-types").AbortOptions;
export type CID = import("cids");
//# sourceMappingURL=ls.d.ts.map