declare function _exports(context: any): (...args: [import("ipfs-core-types/src/root").IPFSPath, (CpOptions | undefined)?] | [import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath, (CpOptions | undefined)?] | [import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath, (CpOptions | undefined)?] | [import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath, (CpOptions | undefined)?] | [import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath, (CpOptions | undefined)?] | [import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath, (CpOptions | undefined)?] | [import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath, (CpOptions | undefined)?] | [import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath, (CpOptions | undefined)?]) => Promise<void>;
export = _exports;
export type CpOptions = {
    flush?: boolean | undefined;
    shardSplitThreshold?: number | undefined;
    hashAlg?: string | undefined;
    cidVersion?: 0 | 1 | undefined;
    parents?: boolean | undefined;
};
export type From = [import("ipfs-core-types/src/root").IPFSPath] | [import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath] | [import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath] | [import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath] | [import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath] | [import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath] | [import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath] | [import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath, import("ipfs-core-types/src/root").IPFSPath];
export type CID = import("cids");
export type AbortOptions = import("ipfs-core-types").AbortOptions;
//# sourceMappingURL=cp.d.ts.map