declare function _exports({ blockService, gcLock, pinManager }: {
    blockService: import('.').BlockService;
    pinManager: import('.').PinManager;
    gcLock: import('.').GCLock;
}): (cids: CID | CID[], options?: (RmOptions & import("ipfs-core-types").AbortOptions) | undefined) => AsyncIterable<RmResult>;
export = _exports;
export type RmOptions = {
    /**
     * - Ignores nonexistent blocks
     */
    force?: boolean | undefined;
    /**
     * - Write minimal output
     */
    quiet?: boolean | undefined;
};
export type AbortOptions = import("ipfs-core-types").AbortOptions;
/**
 * Note: If an error is present for a given object, the block with
 * that cid was not removed and the error will contain the reason why,
 * for example if the block was pinned.
 */
export type RmResult = RmSucceess | RmFailure;
export type RmSucceess = {
    cid: CID;
    error?: void | undefined;
};
export type RmFailure = {
    cid: CID;
    error: Error;
};
import CID = require("cids");
//# sourceMappingURL=rm.d.ts.map