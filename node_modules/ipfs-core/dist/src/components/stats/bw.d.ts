declare function _exports({ network }: {
    network: import('.').NetworkService;
}): (options?: (BWOptions & import("ipfs-core-types").AbortOptions) | undefined) => AsyncIterable<BandwidthInfo>;
export = _exports;
export type BWOptions = {
    /**
     * - Specifies a peer to print bandwidth for
     */
    peer?: import("peer-id") | undefined;
    /**
     * - Specifies a protocol to print bandwidth for
     */
    proto?: string | undefined;
    /**
     * - Is used to yield bandwidth info at an interval
     */
    poll?: boolean | undefined;
    /**
     * - The time interval to wait between updating output, if `poll` is `true`.
     */
    interval?: string | number | undefined;
};
export type BandwidthInfo = {
    totalIn: Big;
    totalOut: Big;
    rateIn: Big;
    rateOut: Big;
};
export type LibP2P = import("libp2p/src/");
export type PeerId = import("peer-id");
export type CID = import("cids");
export type AbortOptions = import("ipfs-core-types").AbortOptions;
import { default as Big } from "bignumber.js";
//# sourceMappingURL=bw.d.ts.map