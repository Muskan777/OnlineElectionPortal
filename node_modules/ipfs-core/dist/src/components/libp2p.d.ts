declare function _exports({ options, peerId, multiaddrs, repo, keychainConfig, config }: {
    repo: Repo;
    options: IPFSOptions | undefined;
    peerId: PeerId;
    multiaddrs: Multiaddr[] | undefined;
    keychainConfig: KeychainConfig | undefined;
    config: Partial<IPFSConfig> | undefined;
}): LibP2P;
export = _exports;
export type KeychainConfig = {
    pass?: string | undefined;
};
export type Repo = import("ipfs-core-types/src/repo").Repo<import("./config").IPFSConfig>;
export type Multiaddr = import("multiaddr");
export type PeerId = import("peer-id");
export type IPFSOptions = import("./storage").StorageOptions & import(".").IPFSOptions;
export type LibP2P = import("libp2p/src/");
export type Options = import("libp2p/src/").Libp2pOptions & import("libp2p/src/").constructorOptions;
export type IPFSConfig = {
    Addresses: import("./config").AddressConfig;
    Profiles?: string | undefined;
    Bootstrap?: string[] | undefined;
    Discovery: import("./config").DiscoveryConfig;
    Datastore?: import("./config").DatastoreConfig | undefined;
    Identity?: import("./config").IdentityConfig | undefined;
    Keychain?: import("./config").KeychainConfig | undefined;
    Pubsub?: import("./config").PubsubConfig | undefined;
    Swarm?: import("./config").SwarmConfig | undefined;
    Routing?: import("./config").RoutingConfig | undefined;
};
//# sourceMappingURL=libp2p.d.ts.map